{
  "manifest": {
    "name": "babel-plugin-transform-es2015-block-scoping",
    "version": "6.24.1",
    "description": "Compile ES2015 block scoping (const and let) to ES5",
    "repository": {
      "type": "git",
      "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-es2015-block-scoping"
    },
    "license": "MIT",
    "main": "lib/index.js",
    "dependencies": {
      "babel-traverse": "^6.24.1",
      "babel-types": "^6.24.1",
      "babel-template": "^6.24.1",
      "lodash": "^4.2.0",
      "babel-runtime": "^6.22.0"
    },
    "keywords": [
      "babel-plugin"
    ],
    "devDependencies": {
      "babel-helper-plugin-test-runner": "^6.24.1"
    },
    "_registry": "npm",
    "_loc": "/home/f/frtn7/frtn7.beget.tech/public_html/.cache/yarn/v6/npm-babel-plugin-transform-es2015-block-scoping-6.24.1-76c295dc3a4741b1665adfd3167215dcff32a576/node_modules/babel-plugin-transform-es2015-block-scoping/package.json",
    "readmeFilename": "README.md",
    "readme": "# babel-plugin-transform-es2015-block-scoping\n\n> Compile ES2015 block scoping (const and let) to ES5\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-es2015-block-scoping\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"transform-es2015-block-scoping\"]\n}\n```\n\nWith options:\n\n```json\n{\n  \"plugins\": [\n    [\"transform-es2015-block-scoping\", {\n      \"throwIfClosureRequired\": true\n    }]\n  ]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-es2015-block-scoping script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-es2015-block-scoping\"]\n});\n```\n\n## Options `throwIfClosureRequired`\n\nIn cases such as the following it's impossible to rewrite let/const without adding an additional function and closure while transforming:\n\n```javascript\nfor (let i = 0; i < 5; i++) {\n  setTimeout(() => console.log(i), 1);\n}\n```\n\nIn extremely performance-sensitive code, this can be undesirable. If `\"throwIfClosureRequired\": true` is set, Babel throws when transforming these patterns instead of automatically adding an additional function.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-plugin-transform-es2015-block-scoping/-/babel-plugin-transform-es2015-block-scoping-6.24.1.tgz#76c295dc3a4741b1665adfd3167215dcff32a576",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-plugin-transform-es2015-block-scoping/-/babel-plugin-transform-es2015-block-scoping-6.24.1.tgz",
    "hash": "76c295dc3a4741b1665adfd3167215dcff32a576",
    "registry": "npm",
    "packageName": "babel-plugin-transform-es2015-block-scoping",
    "cacheIntegrity": "sha512-oiFhXoUIwdxeLf+mIcQ7gIG576Q+vgRY0vdN+98/QgCTtBAE8wPrF7AG27ISkLPMFQHxZj5ow0Cx8pxxRNg2lA== sha1-dsKV3DpHQbFmWt/TFnIV3P8ypXY="
  },
  "registry": "npm",
  "hash": "76c295dc3a4741b1665adfd3167215dcff32a576"
}