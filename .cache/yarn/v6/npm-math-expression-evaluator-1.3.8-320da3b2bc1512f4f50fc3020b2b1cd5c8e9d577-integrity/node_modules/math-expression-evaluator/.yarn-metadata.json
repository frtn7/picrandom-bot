{
  "manifest": {
    "name": "math-expression-evaluator",
    "version": "1.3.8",
    "description": "A flexible math expression evaluator",
    "main": "src/formula_evaluator.js",
    "scripts": {
      "test": "mocha"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/redhivesoftware/math-expression-evaluator.git"
    },
    "keywords": [
      "math",
      "expression",
      "evaluator",
      "parser"
    ],
    "author": {
      "name": "Ankit",
      "email": "ankitbug94@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/redhivesoftware/math-expression-evaluator/issues"
    },
    "homepage": "https://github.com/redhivesoftware/math-expression-evaluator#readme",
    "devDependencies": {
      "eslint": "^6.6.0",
      "eslint-config-standard": "^10.2.1",
      "eslint-plugin-import": "^2.2.0",
      "eslint-plugin-node": "^4.2.2",
      "eslint-plugin-promise": "^3.5.0",
      "eslint-plugin-standard": "^3.0.1",
      "grunt": "^0.4.5",
      "grunt-browserify": "^3.8.0",
      "grunt-contrib-uglify": "^0.9.1",
      "grunt-contrib-watch": "^1.0.0",
      "grunt-eslint": "^19.0.0",
      "mocha": "^2.2.5"
    },
    "_registry": "npm",
    "_loc": "/home/f/frtn7/frtn7.beget.tech/public_html/.cache/yarn/v6/npm-math-expression-evaluator-1.3.8-320da3b2bc1512f4f50fc3020b2b1cd5c8e9d577-integrity/node_modules/math-expression-evaluator/package.json",
    "readmeFilename": "README.md",
    "readme": "# math-expression-evaluator\nAn extremely efficient, flexible and amazing evaluator for Math expression in Javascript.([Documentation](http://bugwheels94.github.io/math-expression-evaluator/))\n\n## Use cases\n|Input|Result|Explanation|\n|:---:|:---:| --- |\n|**2+3-1**|4| Addition and Subtraction operator |\n|**2\\*5/10**|1| Multiplication and Division operator |\n|**tan45** *or* **tan(45)**|1| Trigonometric Function ( tan in Degree mode) |\n|**tan45** *or* **tan(45)**|1.619775190543862| Trigonometric Function ( tan in Radian mode) |\n|**Pi1,15,n** *or* **Pi(1,15,n)**|1307674368000| Product of Sequence |\n|**Sigma1,15,n** *or* **Sigma(1,15,n)**|120| Sum of Sequence( also called summation)  |\n|**2^3**|8| Exponent( note this operator is left associative like MS Office) |\n|**5P3**|60| Permutaion Method to calculate all the permutaions |\n|**sincostan90** *or* **sin(cos(tan(90)))**|0.017261434031253| Multiple functions with or without parenthesis (both works) |\n\n### [Fiddle Yourself](https://jsbin.com/romatuc/edit?html,output)\n\n## Installation\n### Node JS\n **Using npm**\n\n    npm install math-expression-evaluator\n\n### Browser\n **Using bower**\n\n    bower install math-expression-evaluator\n\n### How to run test\n\n    npm test\n\n## Supported symbols\n\n|Symbol|Explanation|\n|:---:|:---:|\n|**+**| Addition Operator eg. 2+3 results 5 |\n|**-**| Subtraction Operator eg. 2-3 results -1 |\n|**/**| Division operator eg 3/2 results 1.5 |\n|**\\***| Multiplication Operator eg. 2\\*3 results 6 |\n|**Mod**| Modulus Operator eg. 3 Mod 2 results 1 |\n|**(**| Opening Parenthesis |\n|**)**| Closing Parenthesis |\n|**Sigma**| Summation eg. Sigma(1,100,n) results 5050 |\n|**Pi**| Product eg. Pi(1,10,n) results 3628800 |\n|**n**| Variable for Summation or Product |\n|**pi**| Math constant pi returns 3.14 |\n|**e**| Math constant e returns 2.71 |\n|**C**| Combination operator eg. 4C2 returns 6 |\n|**P**| Permutation operator eg. 4P2 returns 12 |\n|**!**| factorial operator eg. 4! returns 24 |\n|**log**| logarithmic function with base 10 eg. log 1000 returns 3 |\n|**ln**| natural log function with base e eg. ln 2 returns .3010 |\n|**pow**| power function with two operator pow(2,3) returns 8 |\n|**^**| power operator eg. 2^3 returns 8 |\n|**root**| underroot function root 4 returns 2 |\n|**sin**| Sine function |\n|**cos**| Cosine function |\n|**tan**| Tangent function |\n|**asin**| Inverse Sine function |\n|**acos**| Inverse Cosine function |\n|**atan**| Inverse Tangent function |\n|**sinh**| Hyperbolic Sine function |\n|**cosh**| Hyperbolic Cosine function |\n|**tanh**| Hyperbolic Tangent function |\n|**asinh**| Inverse Hyperbolic Sine function |\n|**acosh**| Inverse Hyperbolic Cosine function |\n|**atanh**| Inverse Hyperbolic Tangent function |\n\n## Features\n\n### Amazing support for Sigma and Pi\nThis is a fantastic feature of this calculator that it is capable of evaluating expressions containing **Sigma and Pi**.\nPassing `Sigma(1,100,n)` will evaluate to 5050 as n is summationed from 1 to 100.\nand Pi(1,15,n) will evaluate to 1307674368000 as n is multiplied from 1 to 15 which is equal to 15!\n\n### Parenthesis less expression\nIf a expression is readable by human then it is readable by this evaluator. There is no need to wrap every function inside parenthesis.\nFor eg. sin90 will work totally fine instead of sin(90)\n\n##Changelog\n\n### Removed lodash.indexof and used native Array.prototype.indexOf hence dropping suppports for IE8 and below.\nThis will reflect in next release named v1.2.16\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Ankit G.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/math-expression-evaluator/-/math-expression-evaluator-1.3.8.tgz#320da3b2bc1512f4f50fc3020b2b1cd5c8e9d577",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/math-expression-evaluator/-/math-expression-evaluator-1.3.8.tgz",
    "hash": "320da3b2bc1512f4f50fc3020b2b1cd5c8e9d577",
    "integrity": "sha512-9FbRY3i6U+CbHgrdNbAUaisjWTozkm1ZfupYQJiZ87NtYHk2Zh9DvxMgp/fifxVhqTLpd5fCCLossUbpZxGeKw==",
    "registry": "npm",
    "packageName": "math-expression-evaluator",
    "cacheIntegrity": "sha512-9FbRY3i6U+CbHgrdNbAUaisjWTozkm1ZfupYQJiZ87NtYHk2Zh9DvxMgp/fifxVhqTLpd5fCCLossUbpZxGeKw== sha1-Mg2jsrwVEvT1D8MCCysc1cjp1Xc="
  },
  "registry": "npm",
  "hash": "320da3b2bc1512f4f50fc3020b2b1cd5c8e9d577"
}